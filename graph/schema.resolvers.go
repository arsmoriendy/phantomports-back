package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.50

import (
	"context"

	"github.com/arsmoriendy/opor/gql-srv/graph/model"
	"github.com/arsmoriendy/opor/gql-srv/internal"
)

// Ports is the resolver for the ports field.
func (r *queryResolver) Ports(ctx context.Context, portNumber *int) ([]*model.Port, error) {
	rports := r.ports
	if portNumber != nil {
		rports = internal.Filter(rports, func(p *model.Port) bool {
			for _, portnum := range p.PortNumber {
				if portnum == *portNumber {
					return true
				}
			}
			return false
		})
	}

	return rports, nil
}

// LastChecked is the resolver for the lastChecked field.
func (r *queryResolver) LastChecked(ctx context.Context) (int, error) {
	return int(r.lastChecked.Unix()), nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
